DROP TABLE IF EXISTS customer_shoes_wish;
DROP TABLE IF EXISTS shoes;
DROP TABLE IF EXISTS customer_scale;
DROP TABLE IF EXISTS customer;
DROP TABLE IF EXISTS scale;
DROP TABLE IF EXISTS text_template;
DROP SEQUENCE IF EXISTS global_seq;

CREATE SEQUENCE global_seq AS INTEGER START WITH 100 INCREMENT BY 1;

CREATE TABLE IF NOT EXISTS text_template
(
    id         INTEGER GENERATED BY DEFAULT AS IDENTITY SEQUENCE global_seq PRIMARY KEY,
    key_value  VARCHAR(50)  NOT NULL,
    text_value VARCHAR(500) NOT NULL,
    CONSTRAINT key_unique_idx UNIQUE (key_value)
);

CREATE TABLE IF NOT EXISTS scale
(
    size        INT NOT NULL,
    volume      INT NOT NULL,
    foot_length INT NOT NULL,
    foot_width  INT NOT NULL,
    foot_height INT NOT NULL,
    PRIMARY KEY (size, volume)
);

CREATE TABLE IF NOT EXISTS customer
(
    chat_member_id BIGINT PRIMARY KEY,
    user_name      VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS customer_scale
(
    customer_id BIGINT NOT NULL,
    size        INT    NOT NULL,
    volume      INT    NOT NULL,
    PRIMARY KEY (customer_id, size, volume),
    CONSTRAINT fk__customer_scale__customer__customer_id__chat_member_id
        FOREIGN KEY (customer_id) REFERENCES customer (chat_member_id),
    CONSTRAINT fk__customer_scale__scale__size__volume__size__volume
        FOREIGN KEY (size, volume) REFERENCES scale (size, volume)
);

CREATE TABLE IF NOT EXISTS shoes
(
    vendor_code VARCHAR(50) PRIMARY KEY,
    name        VARCHAR(50)  NOT NULL,
    description VARCHAR(500) NOT NULL,
    image_url   VARCHAR(200) NULL,
    size        INT          NOT NULL,
    volume      INT          NOT NULL,
    CONSTRAINT fk__shoes__scale__size__volume__size__volume
        FOREIGN KEY (size, volume) REFERENCES scale (size, volume)
);

CREATE TABLE IF NOT EXISTS customer_shoes_wish
(
    customer_id BIGINT      NOT NULL,
    vendor_code VARCHAR(50) NOT NULL,
    PRIMARY KEY (customer_id, vendor_code),
    CONSTRAINT fk__customer_shoes_wish__customer__customer_id__id
        FOREIGN KEY (customer_id) REFERENCES customer (chat_member_id),
    CONSTRAINT fk__customer_shoes_wish__shoes__vendor_code__vendor_code
        FOREIGN KEY (vendor_code) REFERENCES shoes (vendor_code)
)
