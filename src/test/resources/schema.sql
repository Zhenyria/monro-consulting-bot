DROP SCHEMA IF EXISTS monro CASCADE;

CREATE SCHEMA IF NOT EXISTS monro;

CREATE SEQUENCE IF NOT EXISTS monro.global_seq AS INTEGER START WITH 100 INCREMENT BY 1;

CREATE TABLE IF NOT EXISTS monro.text_template
(
    id         INTEGER GENERATED BY DEFAULT AS IDENTITY SEQUENCE monro.global_seq PRIMARY KEY,
    key_value  VARCHAR(50)  NOT NULL,
    text_value VARCHAR(500) NOT NULL,
    CONSTRAINT key_unique_idx UNIQUE (key_value)
);

CREATE TABLE IF NOT EXISTS monro.scale
(
    size        INTEGER       NOT NULL,
    volume      INTEGER       NOT NULL,
    foot_length DECIMAL(3, 1) NOT NULL,
    foot_girth  DECIMAL(3, 1) NOT NULL,
    PRIMARY KEY (size, volume)
);

CREATE TABLE IF NOT EXISTS monro.customer
(
    chat_member_id BIGINT PRIMARY KEY,
    user_name      VARCHAR(50) NOT NULL,
    first_name     VARCHAR(50) NULL,
    last_name      VARCHAR(50) NULL,
    phone_number   VARCHAR(50) NULL
);

CREATE TABLE IF NOT EXISTS monro.customer_scale
(
    customer_id BIGINT  NOT NULL,
    size        INTEGER NOT NULL,
    volume      INTEGER NOT NULL,
    PRIMARY KEY (customer_id, size, volume),
    CONSTRAINT fk__customer_scale__customer__customer_id__chat_member_id
        FOREIGN KEY (customer_id) REFERENCES monro.customer (chat_member_id),
    CONSTRAINT fk__customer_scale__scale__size__volume__size__volume
        FOREIGN KEY (size, volume) REFERENCES monro.scale (size, volume)
);

CREATE TABLE IF NOT EXISTS monro.season
(
    name_val       VARCHAR(50) PRIMARY KEY,
    localized_name VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS monro.shoes_model
(
    name_val       VARCHAR(50) PRIMARY KEY,
    localized_name VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS monro.shoes
(
    id          INTEGER GENERATED BY DEFAULT AS IDENTITY SEQUENCE monro.global_seq PRIMARY KEY,
    vendor_code VARCHAR(50)  NOT NULL,
    url         VARCHAR(200) NOT NULL,
    name        VARCHAR(50)  NOT NULL,
    description VARCHAR(500) NOT NULL,
    image_url   VARCHAR(200) NULL,
    season_name VARCHAR(50)  NOT NULL,
    model_name  VARCHAR(50)  NOT NULL,
    CONSTRAINT fk__shoes__season__season_name__name
        FOREIGN KEY (season_name) REFERENCES monro.season (name_val),
    CONSTRAINT fk__shoes__shoes_model__model_name__name
        FOREIGN KEY (model_name) REFERENCES monro.shoes_model (name_val)
);

CREATE TABLE IF NOT EXISTS monro.shoes_scales
(
    shoes_id INTEGER NOT NULL,
    size     INTEGER NOT NULL,
    volume   INTEGER NOT NULL,
    PRIMARY KEY (shoes_id, size, volume),
    CONSTRAINT fk__shoes_scales__shoes__shoes_id__id
        FOREIGN KEY (shoes_id) REFERENCES monro.shoes (id),
    CONSTRAINT fk__shoes_scales__scale__size__volume__size__volume
        FOREIGN KEY (size, volume) REFERENCES monro.scale (size, volume)
);

CREATE TABLE IF NOT EXISTS monro.customer_shoes_wish
(
    customer_id BIGINT  NOT NULL,
    shoes_id    INTEGER NOT NULL,
    PRIMARY KEY (customer_id, shoes_id),
    CONSTRAINT fk__customer_shoes_wish__customer__customer_id__id
        FOREIGN KEY (customer_id) REFERENCES monro.customer (chat_member_id),
    CONSTRAINT fk__customer_shoes_wish__shoes__shoes_id__id
        FOREIGN KEY (shoes_id) REFERENCES monro.shoes (id)
);

CREATE TABLE IF NOT EXISTS monro.users
(
    name_val VARCHAR(255) PRIMARY KEY,
    password VARCHAR(255) NULL
);

CREATE TABLE IF NOT EXISTS monro.consultation_request
(
    id              INTEGER GENERATED BY DEFAULT AS IDENTITY SEQUENCE monro.global_seq PRIMARY KEY,
    customer_id     BIGINT                                NOT NULL,
    create_datetime TIMESTAMP DEFAULT CURRENT_TIMESTAMP() NOT NULL,
    CONSTRAINT fk__consultation_request__customer__customer_id__chat_member_id
        FOREIGN KEY (customer_id) REFERENCES monro.customer (chat_member_id)
);

CREATE TABLE IF NOT EXISTS monro.consultation_requests_shoes
(
    consultation_request_id INTEGER NOT NULL,
    shoes_id                INTEGER NOT NULL,
    PRIMARY KEY (consultation_request_id, shoes_id),
    CONSTRAINT fk__consultation_requests_shoes__cnslt_request__cnslt_rq_id__id
        FOREIGN KEY (consultation_request_id) REFERENCES monro.consultation_request (id),
    CONSTRAINT fk__consultation_requests_shoes__shoes__shoes_id__id
        FOREIGN KEY (shoes_id) REFERENCES monro.shoes (id)
);
